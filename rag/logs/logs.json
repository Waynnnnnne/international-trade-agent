{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"Shipping Company and Freight Forwarding Logistics Network\",\n    \"summary\": \"The community centers on the SHIPPING COMPANY, a maritime logistics provider specializing in international cargo transportation, and its collaboration with the FREIGHT FORWARDING COMPANY. The SHIPPING COMPANY manages end-to-end delivery processes, including critical documentation and Customs coordination, while the FREIGHT FORWARDING COMPANY secures shipping containers and schedules. Their partnership ensures efficient logistics operations and regulatory compliance within the supply chain.\",\n    \"rating\": 6.5,\n    \"rating_explanation\": \"The impact severity rating reflects the critical role of these entities in global trade logistics, though no direct risks or violations are evident.\",\n    \"findings\": [\n        {\n            \"summary\": \"SHIPPING COMPANY’s central role in international logistics\",\n            \"explanation\": \"The SHIPPING COMPANY is pivotal in managing international cargo transportation, including documentation (bills of lading, 装货单, 运单) and Customs coordination. Its oversight of regulatory compliance and physical cargo movement positions it as a linchpin in the supply chain. Disruptions to its operations could delay global trade flows. [Data: Entities (23), Relationships (24)]\"\n        },\n        {\n            \"summary\": \"FREIGHT FORWARDING COMPANY’s logistical support\",\n            \"explanation\": \"The FREIGHT FORWARDING COMPANY collaborates with the SHIPPING COMPANY to secure cargo space, manage container schedules, and streamline logistics timelines. This partnership ensures operational efficiency but creates interdependency; any failure in coordination could disrupt cargo delivery. [Data: Entities (22), Relationships (21)]\"\n        },\n        {\n            \"summary\": \"Customs coordination as a compliance cornerstone\",\n            \"explanation\": \"The SHIPPING COMPANY’s direct coordination with Customs authorities for cargo inspections and 装货单 validation underscores its role in ensuring regulatory adherence. This relationship mitigates compliance risks but introduces vulnerability to regulatory changes or inspection delays. [Data: Relationships (24)]\"\n        },\n        {\n            \"summary\": \"Documentation management critical for trade integrity\",\n            \"explanation\": \"Both entities handle essential shipping documents (e.g., bills of lading, 装货单), which are legally binding and required for Customs clearance. Errors or fraud in these documents could lead to legal disputes or cargo seizures. [Data: Entities (23, 22)]\"\n        },\n        {\n            \"summary\": \"Supply chain efficiency through collaboration\",\n            \"explanation\": \"The partnership between the SHIPPING COMPANY and FREIGHT FORWARDING COMPANY optimizes container utilization and delivery timelines. Their combined efforts reduce bottlenecks but centralize risk, as systemic failures in either entity could cascade through the supply chain. [Data: Relationships (21, 24)]\"\n        }\n    ]\n}\n```.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"Trading Company and Export Compliance Network\",\n    \"summary\": \"The community centers on the Trading Company, which coordinates production with Factories, sources materials from Suppliers, arranges third-party inspections via SGS, and receives operational advice from Da Ye. Factories are subject to mandatory inspections by the National Import and Export Commodity Inspection and Quarantine Bureau. The network emphasizes compliance, contractual obligations, and operational efficiency in export processes.\",\n    \"rating\": 6.5,\n    \"rating_explanation\": \"The impact severity rating reflects the critical role of compliance and supply chain dependencies in international trade operations.\",\n    \"findings\": [\n        {\n            \"summary\": \"Trading Company as central operational hub\",\n            \"explanation\": \"The Trading Company is the core entity, managing production orders to Factories (Relationship 13), issuing legally binding purchase orders to Suppliers (Relationship 16), coordinating SGS inspections (Relationship 17), and implementing Da Ye's operational advice (Relationship 19). Its high degree (6) underscores its pivotal role in connecting all entities. Non-compliance or logistical failures here could disrupt the entire supply chain. [Data: Entities (16); Relationships (13, 16, 17, 19)]\"\n        },\n        {\n            \"summary\": \"Mandatory government inspections at factories\",\n            \"explanation\": \"Factories must allow the National Import and Export Commodity Inspection and Quarantine Bureau to inspect goods in their warehouses (Relationship 15). This creates compliance risks, as failure to meet standards could result in shipment delays or penalties. The Bureau's authority (Entity 21) adds regulatory weight to these requirements. [Data: Entities (21); Relationships (15)]\"\n        },\n        {\n            \"summary\": \"Legally binding supplier contracts\",\n            \"explanation\": \"Suppliers operate under strict procurement contracts with Trading Companies (Relationship 16), requiring precise material specifications (Entity 17). This legal framework increases accountability but also creates financial risks if suppliers fail to meet obligations. The high combined degree (8) of this relationship emphasizes its operational importance. [Data: Entities (17); Relationships (16)]\"\n        },\n        {\n            \"summary\": \"Third-party quality verification system\",\n            \"explanation\": \"SGS inspections (Entity 18) serve as a quality control checkpoint mandated by clients (Relationship 17). The requirement for advance scheduling introduces potential bottlenecks, as production timelines must align with inspection availability. This creates both quality assurance benefits and logistical challenges. [Data: Entities (18); Relationships (17)]\"\n        },\n        {\n            \"summary\": \"Operational optimization recommendations\",\n            \"explanation\": \"Da Ye (Entity 24) advises hiring specialized 跟单 staff to handle order tracking (Relationship 19), suggesting existing inefficiencies in production monitoring. Implementation of this advice could improve supply chain visibility but requires additional resource allocation from Trading Companies. [Data: Entities (24); Relationships (19)]\"\n        },\n        {\n            \"summary\": \"Factory dependency on supplier inputs\",\n            \"explanation\": \"Factories rely on Suppliers for raw materials/components per Trading Company requirements (Relationship 14). This tripartite dependency (Factory-Supplier-Trading Company) creates vulnerability to upstream supply chain disruptions. The mid-level combined degree (5) indicates moderate but critical operational reliance. [Data: Relationships (14); Entities (15, 17)]\"\n        }\n    ]\n}\n```.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
{
    "type": "error",
    "data": "Community Report Extraction Error",
    "stack": "Traceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 126, in _parse_json_string\n    return json.loads(value) if value else None\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 96, in invoke_json\n    return await self.try_receive_json(delegate, prompt, kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 114, in try_receive_json\n    raw_json = self._parse_json_string(json_string)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 129, in _parse_json_string\n    raise FailedToGenerateValidJsonError(msg) from err\nfnllm.base.services.errors.FailedToGenerateValidJsonError: JSON response is not a valid JSON, response=```json\n{\n    \"title\": \"CUSTOMS and Export Compliance Network\",\n    \"summary\": \"The community centers on CUSTOMS, the government authority overseeing export compliance, which interacts with customs brokerage firms, the STATE TAX BUREAU, and the ELECTRONIC PORT SYSTEM. These entities form a regulatory network for export declarations, cargo inspections, tax refunds, and digital data sharing. The CUSTOMS BROKERAGE FIRM and PROFESSIONAL CUSTOMS DECLARANT handle documentation submissions, while the STATE TAX BUREAU and ELECTRONIC PORT SYSTEM manage tax refunds and data integration.\",\n    \"rating\": 7.5,\n    \"rating_explanation\": \"The high impact severity reflects CUSTOMS' critical role in international trade compliance and financial flows, where disruptions could affect tax revenues and cross-border trade.\",\n    \"findings\": [\n        {\n            \"summary\": \"CUSTOMS as the central regulatory authority\",\n            \"explanation\": \"CUSTOMS is the core entity, responsible for export declaration processing, cargo inspections, tax/duty assessments, and final clearance approvals. Its regulatory functions directly influence trade legitimacy and financial compliance. Relationships with brokerage firms, tax authorities, and digital systems underscore its pivotal role. [Data: Entities (27), Relationships (22, 33, 34)]\"\n        },\n        {\n            \"summary\": \"CUSTOMS BROKERAGE FIRM and declarant collaboration\",\n            \"explanation\": \"The CUSTOMS BROKERAGE FIRM relies on PROFESSIONAL CUSTOMS DECLARANTS to submit critical documentation (e.g., 装箱单, invoices, 检验证书) to CUSTOMS for clearance. This partnership ensures compliance but introduces dependency risks if documentation is inaccurate or fraudulent. [Data: Entities (25, 28), Relationships (22, 23)]\"\n        },\n        {\n            \"summary\": \"Data integration with STATE TAX BUREAU\",\n            \"explanation\": \"CUSTOMS electronically transmits export declaration data to the STATE TAX BUREAU to process VAT refunds. This linkage ensures tax refund accuracy but creates systemic vulnerabilities if data integrity is compromised. [Data: Entities (27, 34), Relationships (33)]\"\n        },\n        {\n            \"summary\": \"ELECTRONIC PORT SYSTEM’s role in digitization\",\n            \"explanation\": \"The ELECTRONIC PORT SYSTEM integrates export declaration data from CUSTOMS, enabling streamlined tax refund applications. This digital platform reduces manual processes but centralizes cybersecurity risks. [Data: Entities (38), Relationships (34, 37)]\"\n        },\n        {\n            \"summary\": \"TAX REFUND process dependencies\",\n            \"explanation\": \"The STATE TAX BUREAU administers TAX REFUNDS using multi-source data (CUSTOMS declarations, bank records). Exporters depend on the ELECTRONIC PORT SYSTEM to retrieve required documentation, creating bottlenecks if system failures occur. [Data: Entities (34, 37), Relationships (35, 37)]\"\n        }\n    ]\n}\n```.\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 144, in __call__\n    return await self._decorated_target(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 77, in invoke\n    return await this.invoke_json(delegate, prompt, kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\services\\json.py\", line 100, in invoke_json\n    raise FailedToGenerateValidJsonError from error\nfnllm.base.services.errors.FailedToGenerateValidJsonError\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\index\\operations\\summarize_communities\\community_reports_extractor.py\", line 80, in __call__\n    response = await self._model.achat(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\models.py\", line 81, in achat\n    response = await self.model(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\openai\\llm\\openai_chat_llm.py\", line 94, in __call__\n    return await self._text_chat_llm(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\openai\\services\\openai_tools_parsing.py\", line 130, in __call__\n    return await self._delegate(prompt, **kwargs)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\fnllm\\base\\base_llm.py\", line 148, in __call__\n    await self._events.on_error(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\events.py\", line 26, in on_error\n    self._on_error(error, traceback, arguments)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\language_model\\providers\\fnllm\\utils.py\", line 45, in on_error\n    callbacks.error(\"Error Invoking LLM\", error, stack, details)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\callbacks\\workflow_callbacks_manager.py\", line 64, in error\n    callback.error(message, cause, stack, details)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\site-packages\\graphrag\\callbacks\\file_workflow_callbacks.py\", line 37, in error\n    json.dumps(\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 201, in encode\n    chunks = list(chunks)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 431, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 405, in _iterencode_dict\n    yield from chunks\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 438, in _iterencode\n    o = _default(o)\n  File \"E:\\Anaconda\\envs\\agent\\lib\\json\\encoder.py\", line 179, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type ModelMetaclass is not JSON serializable\n",
    "source": "Object of type ModelMetaclass is not JSON serializable",
    "details": null
}
